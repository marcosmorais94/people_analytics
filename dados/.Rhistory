1+2
install.packages('caret')
# Definindo diretório de trabalho
setwd("C:/FCD/R/people_analytics")
getwd()
# Carga de pacotes
library(caret)
library(ggplot2)
library(gridExtra)
library(data.table)
library(car)
library(caTools)
library(corrplot)
library(rpart)
library(rpart.plot)
# Carga dos dados
bd_rh <- read.csv('dados/people_data.csv')
# Classifica os atributos como tipo categórico
bd_rh$Attrition <- as.factor(bd_rh$Attrition)
bd_rh$BusinessTravel <- as.factor(bd_rh$BusinessTravel)
bd_rh$Department <- as.factor(bd_rh$Department)
bd_rh$Education <- as.factor(bd_rh$Education)
bd_rh$EducationField <- as.factor(bd_rh$EducationField)
bd_rh$Employee.Source <- as.factor(bd_rh$Employee.Source)
bd_rh$EnvironmentSatisfaction <- as.factor(bd_rh$EnvironmentSatisfaction)
bd_rh$Gender <- as.factor(bd_rh$Gender)
bd_rh$JobInvolvement <- as.factor(bd_rh$JobInvolvement)
bd_rh$JobLevel <- as.factor(bd_rh$JobLevel)
bd_rh$JobRole <- as.factor(bd_rh$JobRole)
bd_rh$JobSatisfaction <- as.factor(bd_rh$JobSatisfaction)
bd_rh$MaritalStatus <- as.factor(bd_rh$MaritalStatus)
bd_rh$OverTime <- as.factor(bd_rh$OverTime)
bd_rh$PerformanceRating <- as.factor(bd_rh$PerformanceRating)
bd_rh$RelationshipSatisfaction <- as.factor(bd_rh$RelationshipSatisfaction)
bd_rh$StockOptionLevel <- as.factor(bd_rh$StockOptionLevel)
bd_rh$WorkLifeBalance <- as.factor(bd_rh$WorkLifeBalance)
# Drop dos níveis de fatores com 0 count
dados <- droplevels(bd_rh)
str(bd_rh)
# Pior Year of Experience siginifica quantos anos o profissional tem de experiência profissional
bd_rh$PriorYearsOfExperience <- bd_rh$TotalWorkingYears - bd_rh$YearsAtCompany
View(bd_rh)
# A Average Tenure produz valores como Inf devido à natureza de sua derivação
# Substituímos para zero.
summary(bd_rh$AverageTenure)
#Average Tenure é a estabilidade média do profissional no mesmo emprego
bd_rh$AverageTenure <- bd_rh$PriorYearsOfExperience / bd_rh$NumCompaniesWorked
View(bd_rh)
# A Average Tenure produz valores como Inf devido à natureza de sua derivação
# Substituímos para zero.
summary(bd_rh$AverageTenure)
# Substituímos para zero, onde tudo que for contrário de finito será igualado a 0.
bd_rh$AverageTenure[!is.finite(bd_rh$AverageTenure)] <- 0
# Confere se ainda há valores Inf
summary(bd_rh$AverageTenure)
dados_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination']
# Subset dos dados como base na coluna Termination, que indica se o funcionário foi desligado da empresa.
dados_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination']
# Subset dos dados como base na coluna Termination, que indica se o funcionário foi desligado da empresa.
dados_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination']
View(bd_rh)
# Mesmo filtro anterior, mas agora por demissão voluntária
dados_rh_2 <- bd_rh[bd_rh$Attrition != 'Voluntary Resignation']
# Subset dos dados como base na coluna Termination, que indica se o funcionário foi desligado da empresa.
dados_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination']
# Subset dos dados como base na coluna Termination, que indica se o funcionário foi desligado da empresa.
bd_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination']
# Subset dos dados como base na coluna Termination, que indica se o funcionário foi desligado da empresa.
bd_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination',]
View(bd_rh_1)
bd_rh_1 <- droplevels(bd_rh_1)
dim(bd_rh_1)
summary(bd_rh_1)
# Mesmo filtro anterior, mas agora por demissão voluntária
bd_rh_2 <- bd_rh[bd_rh$Attrition != 'Voluntary Resignation',]
bd_rh_2 <- droplevels(bd_rh_2)
dim(bd_rh_2)
summary(bd_rh_2)
View(bd_rh_2)
# Plots de análise univariada
ggplot(bd_rh) + geom_bar(aes(x = Gender))
ggplot(bd_rh) + geom_density(aes(x = Age))
ggplot(bd_rh) + geom_bar(aes(x = Attrition))
ggplot(bd_rh) + geom_bar(aes(x = Department))
ggplot(bd_rh) + geom_bar(aes(x = JobRole))
ggplot(bd_rh) + geom_bar(aes(x = Education)) + facet_grid(~EducationField)
# Multiplot Grid
p.TotalWorkingYears       <- ggplot(bd_rh) + geom_density(aes(TotalWorkingYears))
p.YearsAtCompany          <- ggplot(bd_rh) + geom_density(aes(YearsAtCompany))
p.YearsSinceLastPromotion <- ggplot(bd_rh) + geom_density(aes(YearsSinceLastPromotion))
p.YearsWithCurrManager    <- ggplot(bd_rh) + geom_density(aes(YearsWithCurrManager))
p.YearsInCurrentRole      <- ggplot(bd_rh) + geom_density(aes(YearsInCurrentRole))
p.PriorYearsOfExperience  <- ggplot(bd_rh) + geom_density(aes(PriorYearsOfExperience))
savehistory("C:/FCD/R/people_analytics/people_analytics_history.Rhistory")
# Multiplot Grid
p.TotalWorkingYears       <- ggplot(bd_rh) + geom_density(aes(TotalWorkingYears))
p.YearsAtCompany          <- ggplot(bd_rh) + geom_density(aes(YearsAtCompany))
p.YearsSinceLastPromotion <- ggplot(bd_rh) + geom_density(aes(YearsSinceLastPromotion))
p.YearsWithCurrManager    <- ggplot(bd_rh) + geom_density(aes(YearsWithCurrManager))
p.YearsInCurrentRole      <- ggplot(bd_rh) + geom_density(aes(YearsInCurrentRole))
p.PriorYearsOfExperience  <- ggplot(bd_rh) + geom_density(aes(PriorYearsOfExperience))
# Organiza no grid
grid.arrange(p.TotalWorkingYears,
p.YearsAtCompany,
p.YearsSinceLastPromotion,
p.YearsWithCurrManager,
p.YearsInCurrentRole,
p.PriorYearsOfExperience,
nrow = 2,
ncol = 3)
# Tempo de experiência anterior
# Vamos descobrir a proporção de funcionários com menos de alguns anos de experiência
# (valores escolhidos: 1, 3, 5, 7, 10 anos)
length(which(dados_rh$PriorYearsOfExperience < 1)) / length(dados_rh$PriorYearsOfExperience)
# Tempo de experiência anterior
# Vamos descobrir a proporção de funcionários com menos de alguns anos de experiência
# (valores escolhidos: 1, 3, 5, 7, 10 anos)
length(which(bd_rh$PriorYearsOfExperience < 1)) / length(bd_rh$PriorYearsOfExperience)
length(which(bd_rh$PriorYearsOfExperience < 3)) / length(bd_rh$PriorYearsOfExperience)
length(which(bd_rh$PriorYearsOfExperience < 5)) / length(bd_rh$PriorYearsOfExperience)
length(which(bd_rh$PriorYearsOfExperience < 7)) / length(bd_rh$PriorYearsOfExperience)
length(which(bd_rh$PriorYearsOfExperience < 10)) / length(bd_rh$PriorYearsOfExperience)
# Idade
length(which(bd_rh$Age < 30)) / length(bd_rh$Age)
length(which(bd_rh$Education == 3)) / length(bd_rh$Education)
length(which(bd_rh$Education == 4)) / length(bd_rh$Education)
ggplot(data = subset(bd_rh, !is.na(JobSatisfaction)), aes(JobSatisfaction, MonthlyIncome)) +
geom_boxplot()
# Correlação
cor(bd_rh$TotalWorkingYears, bd_rh$YearsAtCompany,          use = "complete.obs")
cor(bd_rh$YearsAtCompany,    bd_rh$YearsInCurrentRole,      use = "complete.obs")
cor(bd_rh$YearsAtCompany,    bd_rh$YearsSinceLastPromotion, use = "complete.obs")
cor(bd_rh$YearsAtCompany,    bd_rh$YearsWithCurrManager,    use = "complete.obs")
cor(bd_rh$TotalWorkingYears, bd_rh$MonthlyIncome,           use = "complete.obs")
cor(bd_rh$YearsAtCompany,    bd_rh$MonthlyIncome,           use = "complete.obs")
# Scatterplots
ggplot(bd_rh) + geom_point(aes(TotalWorkingYears, MonthlyIncome))
# Vamos investigar a relação do equilíbrio entre vida pessoal e profissional e renda mensal
ggplot(data = subset(bd_rh, !is.na(WorkLifeBalance)), aes(WorkLifeBalance, MonthlyIncome)) +
geom_boxplot()
# Verificando a diferença salarial entre homens e mulheres.
ggplot(data = subset(bd_rh, !is.na(Gender)), aes(Gender, MonthlyIncome, fill = Gender)) +
geom_boxplot() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5, size = 10)) +
labs(x = "Gender", y = "Monthly Income", title = "Salário Mensal Entre Gêneros") +
coord_flip()
ggplot(data = subset(bd_rh, !is.na(JobRole))) + geom_boxplot(aes(JobRole, MonthlyIncome)) +
ggtitle("Salário Mensal Por Função")
ggplot(data = subset(bd_rh, !is.na(JobRole))) + geom_boxplot(aes(JobRole, AgeStartedWorking)) +
ggtitle("Idade Que Iniciou na Função")
ggplot(data = subset(bd_rh, !is.na(JobRole))) + geom_boxplot(aes(JobRole, Age)) +
ggtitle("Idade Por Função")
ggplot(data = subset(bd_rh, !is.na(JobRole))) + geom_boxplot(aes(JobRole, YearsAtCompany)) +
ggtitle("Tempo de Empresa (em anos)")
ggplot(data = na.omit(bd_rh)) + geom_bar(aes(JobRole, fill = Education), position = "fill") +
ggtitle("Nível de Educação Por Função") +
ylab("Proportion")
# Plots de análise multivariada para variáveis normalmente usadas após o processo de contratação
ggplot(bd_rh_1) + geom_bar(aes(x = Age, fill = Attrition), position = 'fill')
ggplot(bd_rh_1) + geom_bar(aes(x = Department, fill = Attrition), position = 'fill')
ggplot(bd_rh_1) + geom_bar(aes(x = DistanceFromHome, fill = Attrition), position = 'fill')
ggplot(bd_rh_1) + geom_bar(aes(x = `Employee Source`, fill = Attrition), position = 'fill')
# Plots de análise multivariada para variáveis normalmente usadas após o processo de contratação
ggplot(bd_rh_1) + geom_bar(aes(x = Age, fill = Attrition), position = 'fill')
ggplot(bd_rh_1) + geom_bar(aes(x = Department, fill = Attrition), position = 'fill')
ggplot(bd_rh_1) + geom_bar(aes(x = DistanceFromHome, fill = Attrition), position = 'fill')
ggplot(bd_rh_1) + geom_bar(aes(x = `Employee Source`, fill = Attrition), position = 'fill')
modelo_v1 <- glm(Attrition ~ Age + Department + DistanceFromHome + `Employee Source` +
JobRole + MaritalStatus + AverageTenure + PriorYearsOfExperience + Gender +
Education + EducationField,
family = binomial,
data = bd_rh)
modelo_v1 <- glm(Attrition ~ Age + Department + DistanceFromHome + Employee.Source +
JobRole + MaritalStatus + AverageTenure + PriorYearsOfExperience + Gender +
Education + EducationField,
family = binomial,
data = bd_rh)
summary(modelo_v1)
summary(modelo_v1)
exp(0.13)
exp(0.804038)
exp(0.002)
1 - exp(0.002)
vif(modelo_v1)
savehistory("C:/FCD/R/people_analytics/people_analytics_history.Rhistory")
