1+2
install.packages('caret')
# Definindo diretório de trabalho
setwd("C:/FCD/R/people_analytics")
getwd()
# Carga de pacotes
library(caret)
library(ggplot2)
library(gridExtra)
library(data.table)
library(car)
library(caTools)
library(corrplot)
library(rpart)
library(rpart.plot)
# Carga dos dados
bd_rh <- read.csv('dados/people_data.csv')
# Classifica os atributos como tipo categórico
bd_rh$Attrition <- as.factor(bd_rh$Attrition)
bd_rh$BusinessTravel <- as.factor(bd_rh$BusinessTravel)
bd_rh$Department <- as.factor(bd_rh$Department)
bd_rh$Education <- as.factor(bd_rh$Education)
bd_rh$EducationField <- as.factor(bd_rh$EducationField)
bd_rh$Employee.Source <- as.factor(bd_rh$Employee.Source)
bd_rh$EnvironmentSatisfaction <- as.factor(bd_rh$EnvironmentSatisfaction)
bd_rh$Gender <- as.factor(bd_rh$Gender)
bd_rh$JobInvolvement <- as.factor(bd_rh$JobInvolvement)
bd_rh$JobLevel <- as.factor(bd_rh$JobLevel)
bd_rh$JobRole <- as.factor(bd_rh$JobRole)
bd_rh$JobSatisfaction <- as.factor(bd_rh$JobSatisfaction)
bd_rh$MaritalStatus <- as.factor(bd_rh$MaritalStatus)
bd_rh$OverTime <- as.factor(bd_rh$OverTime)
bd_rh$PerformanceRating <- as.factor(bd_rh$PerformanceRating)
bd_rh$RelationshipSatisfaction <- as.factor(bd_rh$RelationshipSatisfaction)
bd_rh$StockOptionLevel <- as.factor(bd_rh$StockOptionLevel)
bd_rh$WorkLifeBalance <- as.factor(bd_rh$WorkLifeBalance)
# Drop dos níveis de fatores com 0 count
dados <- droplevels(bd_rh)
str(bd_rh)
# Pior Year of Experience siginifica quantos anos o profissional tem de experiência profissional
bd_rh$PriorYearsOfExperience <- bd_rh$TotalWorkingYears - bd_rh$YearsAtCompany
View(bd_rh)
# A Average Tenure produz valores como Inf devido à natureza de sua derivação
# Substituímos para zero.
summary(bd_rh$AverageTenure)
#Average Tenure é a estabilidade média do profissional no mesmo emprego
bd_rh$AverageTenure <- bd_rh$PriorYearsOfExperience / bd_rh$NumCompaniesWorked
View(bd_rh)
# A Average Tenure produz valores como Inf devido à natureza de sua derivação
# Substituímos para zero.
summary(bd_rh$AverageTenure)
# Substituímos para zero, onde tudo que for contrário de finito será igualado a 0.
bd_rh$AverageTenure[!is.finite(bd_rh$AverageTenure)] <- 0
# Confere se ainda há valores Inf
summary(bd_rh$AverageTenure)
dados_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination']
# Subset dos dados como base na coluna Termination, que indica se o funcionário foi desligado da empresa.
dados_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination']
# Subset dos dados como base na coluna Termination, que indica se o funcionário foi desligado da empresa.
dados_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination']
View(bd_rh)
# Mesmo filtro anterior, mas agora por demissão voluntária
dados_rh_2 <- bd_rh[bd_rh$Attrition != 'Voluntary Resignation']
# Subset dos dados como base na coluna Termination, que indica se o funcionário foi desligado da empresa.
dados_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination']
# Subset dos dados como base na coluna Termination, que indica se o funcionário foi desligado da empresa.
bd_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination']
# Subset dos dados como base na coluna Termination, que indica se o funcionário foi desligado da empresa.
bd_rh_1 <- bd_rh[bd_rh$Attrition != 'Termination',]
View(bd_rh_1)
bd_rh_1 <- droplevels(bd_rh_1)
dim(bd_rh_1)
summary(bd_rh_1)
# Mesmo filtro anterior, mas agora por demissão voluntária
bd_rh_2 <- bd_rh[bd_rh$Attrition != 'Voluntary Resignation',]
bd_rh_2 <- droplevels(bd_rh_2)
dim(bd_rh_2)
summary(bd_rh_2)
View(bd_rh_2)
# Plots de análise univariada
ggplot(bd_rh) + geom_bar(aes(x = Gender))
ggplot(bd_rh) + geom_density(aes(x = Age))
ggplot(bd_rh) + geom_bar(aes(x = Attrition))
ggplot(bd_rh) + geom_bar(aes(x = Department))
ggplot(bd_rh) + geom_bar(aes(x = JobRole))
ggplot(bd_rh) + geom_bar(aes(x = Education)) + facet_grid(~EducationField)
# Multiplot Grid
p.TotalWorkingYears       <- ggplot(bd_rh) + geom_density(aes(TotalWorkingYears))
p.YearsAtCompany          <- ggplot(bd_rh) + geom_density(aes(YearsAtCompany))
p.YearsSinceLastPromotion <- ggplot(bd_rh) + geom_density(aes(YearsSinceLastPromotion))
p.YearsWithCurrManager    <- ggplot(bd_rh) + geom_density(aes(YearsWithCurrManager))
p.YearsInCurrentRole      <- ggplot(bd_rh) + geom_density(aes(YearsInCurrentRole))
p.PriorYearsOfExperience  <- ggplot(bd_rh) + geom_density(aes(PriorYearsOfExperience))
savehistory("C:/FCD/R/people_analytics/people_analytics_history.Rhistory")
